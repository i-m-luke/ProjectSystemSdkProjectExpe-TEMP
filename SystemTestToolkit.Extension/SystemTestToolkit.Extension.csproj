<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <MinimumVisualStudioVersion>17.0</MinimumVisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
  </PropertyGroup>
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <OutputType>Library</OutputType>
    <RootNamespace>SystemTestToolkit.Extension</RootNamespace>
    <AssemblyName>SystemTestToolkit.Extension</AssemblyName>
    <TargetFramework>net472</TargetFramework>
    <GeneratePkgDefFile>true</GeneratePkgDefFile>
    <IncludeAssemblyInVSIXContainer>true</IncludeAssemblyInVSIXContainer>
    <IncludeDebugSymbolsInVSIXContainer>false</IncludeDebugSymbolsInVSIXContainer>
    <IncludeDebugSymbolsInLocalVSIXDeployment>false</IncludeDebugSymbolsInLocalVSIXDeployment>
    <CopyBuildOutputToOutputDirectory>true</CopyBuildOutputToOutputDirectory>
    <CopyOutputSymbolsToOutputDirectory>true</CopyOutputSymbolsToOutputDirectory>
    <StartAction>Program</StartAction>
    <StartProgram Condition="'$(DevEnvDir)' != ''">$(DevEnvDir)devenv.exe</StartProgram>
    <StartArguments>/rootsuffix Exp</StartArguments>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="Constants.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="VssdkPackage.cs" />
    <Compile Include="VSSDK\ProjectSystem\ConfiguredPackageProject.cs" />
    <Compile Include="VSSDK\ProjectSystem\Order.cs" />
    <Compile Include="VSSDK\ProjectSystem\PackageProjectTreePropertiesProvider.cs" />
    <Compile Include="VSSDK\ProjectSystem\ProjectProperties.cs" />
    <Compile Include="VSSDK\ProjectSystem\UnconfiguredPackageProject.cs" />
  </ItemGroup>

  <ItemGroup>
    <None Include="Build\SystemTestToolkit.props" />
    <None Include="Build\SystemTestToolkit.targets" />
    <None Include="source.extension.vsixmanifest">
      <SubType>Designer</SubType>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="PresentationCore" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.VisualStudio.SDK" Version="17.12.40392" ExcludeAssets="runtime" />
    <PackageReference Include="Microsoft.VisualStudio.ProjectSystem.SDK" Version="17.9.380" />
    <PackageReference Include="Microsoft.VisualStudio.ProjectSystem" Version="17.9.380" />
    <PackageReference Include="Microsoft.VisualStudio.ProjectSystem.Analyzers" Version="17.9.380" />
    <PackageReference Include="Microsoft.VisualStudio.ProjectSystem.Sdk.Tools" Version="17.9.380" />
    <PackageReference Include="Microsoft.VSSDK.BuildTools" Version="17.12.2069" />
  </ItemGroup>

  <ItemGroup>
    <!-- Reference for project that takes care of project templates  -->
    <ProjectReference Include="..\SystemTestToolkit.ProjectTemplates\SystemTestToolkit.ProjectTemplates.csproj">
      <Project>{D283E124-DA73-40BC-9CDF-F817B26AF120}</Project>
      <Name>SystemTestToolkit.ProjectTemplates</Name>
      <VSIXSubPath>ProjectTemplates</VSIXSubPath>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <IncludeOutputGroupsInVSIX>TemplateProjectOutputGroup%3b</IncludeOutputGroupsInVSIX>
    </ProjectReference>
  </ItemGroup>

  <ItemGroup>
    <VSIXSourceItem Include="Build\*">
      <InProject>false</InProject>
      <InstallRoot>MSBuild</InstallRoot>
      <VSIXSubPath>CustomProjectSystems\SystemTestToolkit</VSIXSubPath>
    </VSIXSourceItem>

    <VSIXSourceItem Include="Build\Rules\*">
      <InProject>false</InProject>
      <InstallRoot>MSBuild</InstallRoot>
      <VSIXSubPath>CustomProjectSystems\SystemTestToolkit\Rules</VSIXSubPath>
    </VSIXSourceItem>
  </ItemGroup>

  <Import Project="$(VSToolsPath)\VSSDK\Microsoft.VsSDK.targets" Condition="'$(VSToolsPath)' != ''" />

  <!-- Although the above causes the VSIX to contain the MSBuild and rules files, the automatic deploy of the
       VSIX to the experimental instance of Visual Studio on build does not copy the files to the MSBuild
       location. In order to simplify development, we'll copy the files to a different well-known location. To
       avoid needed to run Visual Studio as administrator, or overwriting the files installed by the VSIX,
       we'll copy to a different location, in the current user's profile. However, this requires any project
       used to test the project system to import the files from a different location than to use the project
       system installed from the VSIX. -->
  <Target Name="CustomAfterBuild" BeforeTargets="Build;Rebuild">
    <ItemGroup>
      <BuildToCopy Include="Build\*" />
      <RulesToCopy Include="Build\Rules\*" />
    </ItemGroup>

    <Copy SourceFiles="@(BuildToCopy)" DestinationFiles="@(BuildToCopy->'$(LocalAppData)\CustomProjectSystems\SystemTestToolkit\%(RecursiveDir)%(FileName)%(Extension)')" SkipUnchangedFiles="true" />
    <Copy SourceFiles="@(RulesToCopy)" DestinationFiles="@(RulesToCopy->'$(LocalAppData)\CustomProjectSystems\SystemTestToolkit\Rules\%(RecursiveDir)%(FileName)%(Extension)')" SkipUnchangedFiles="true" />
  </Target>
</Project>